

1 - Inicio  - GUSTAVO
		- usuario informa
📋 Dados do Usuário para Coleta no Início do Programa

Digite sua idade:

Cidade

Gênero (opcional)

Nível de Escolaridade

Ocupação Principal

Exemplo de entrada: Digite sua ocupação principal (ex: estudante, agricultor, engenheiro...):

Frequência de Acesso à Internet

Participação em Ações Ambientais


menu para jogar

-------------------------------------------------------------------------------------------------------------------------

--- OUTRA PESSOA FAZ -  LEANDRO

JOGO - Fazer a logica de motrar as perguntas: 

  - Pergunta

  a) alternativa A   b) alternativa B
  c) alternativa C	 d) alternativa D

  - a pergunta vem do banco de dados de forma aleatória conforme no exemplo no main.c
  - alternativas são mostradas de forma aleatória.

  - 15 a 25 perguntas e calcula as pontuações finais de acordo com o peso de cada pergunta.

  - logica de seguir pergunta atras de pergunta até final, tela de finalização
  -logica de salvar os pontos para mostrar placar depois.

  (adicional:: envia placar, pontuação por e-mail para usuário caso ele queira)


(banco dados )

pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 
pergunta - respostas certa/erra - pontos 


------------------------------------------------------------------------------------------------------------

PARTE 3 -- LUCAS

- ---- PERGUNTA


PLACAR - TELA BONITINHA COM PLACAR (EM TEXTO USAR CARACTERES COMO  = - _ +)
 

 EXEMPLO -
╔══════════════════════════════════════════════════════════════╗
║               BEM-VINDO AO QUIZ DA SUSTENTABILIDADE          ║
║             Coleta de Dados do Participante                  ║
╚══════════════════════════════════════════════════════════════╝

Digite seu nome: Leandro Deon
Digite sua idade: 32
Digite sua cidade: Porto Alegre
Digite sua ocupação: Desenvolvedor

╔══════════════════════════════════════════════════════════════╗
║             DADOS COLETADOS COM SUCESSO!                     ║
╚══════════════════════════════════════════════════════════════╝


=== mostra na tela média dos dados ordenado ideade, cidade, sexo 

lógica para mostrar médias

	OBS: COMO NÃO TERÁ MUITOS JOGOS, POR NÃO TER UM BANCO DE DADOS, PODEMOS COLOCAR INFORMAÇÕES FICTICIAS (GPT CONSEGUE GERAR) PARA A MÉDIA TER MAIS DADOS

- FINAL































============= ideia banco de dados 

#include <stdio.h>
#include <locale.h>
#include <string.h>

// --- CONSTANTES ---
#define NUM_PERGUNTAS 5

// --- ESTRUTURAS DE DADOS ---
struct Pergunta {
    char pergunta[200];
    char alternativas[4][100];  // alternativas[0] = correta
    int pontuacao;
};

// --- BANCO DE PERGUNTAS ---
struct Pergunta perguntas[NUM_PERGUNTAS] = {
    {
        "Qual é uma prática sustentável para reduzir o consumo de plástico?",
        {
            "Usar sacolas reutilizáveis",
            "Comprar mais produtos embalados",
            "Descartar lixo no oceano",
            "Utilizar plásticos de uso único"
        },
        100
    },
    {
        "Qual atitude contribui diretamente para a justiça social?",
        {
            "Apoiar a inclusão de minorias no mercado de trabalho",
            "Evitar o convívio com pessoas diferentes",
            "Promover apenas o lucro empresarial",
            "Ignorar desigualdades sociais"
        },
        90
    },
    {
        "O que é reciclagem?",
        {
            "Processo de transformação de resíduos em novos produtos",
            "Descartar o lixo em terrenos baldios",
            "Reutilizar água sem tratamento",
            "Acumular resíduos em casa"
        },
        80
    },
    {
        "Qual ação ajuda no combate às mudanças climáticas?",
        {
            "Reduzir o uso de combustíveis fósseis",
            "Aumentar a queima de carvão",
            "Ignorar o uso consciente de energia",
            "Desmatar florestas para agricultura"
        },
        100
    },
    {
        "O que é consumo consciente?",
        {
            "Comprar apenas o necessário, pensando no impacto ambiental e social",
            "Comprar por impulso durante promoções",
            "Adquirir produtos sem verificar origem",
            "Desperdiçar água e energia por conveniência"
        },
        85
    }
};

// --- FUNÇÃO PARA EXIBIR ALTERNATIVAS E VALIDAR RESPOSTA ---
int exibir_pergunta(int i) {
    printf("\n%d) %s\n", i + 1, perguntas[i].pergunta);
    for (int j = 0; j < 4; j++) {
        printf("%c) %s\n", 'a' + j, perguntas[i].alternativas[j]);
    }

    char resposta;
    printf("Sua resposta: ");
    scanf(" %c", &resposta);
    while ((getchar()) != '\n'); // Limpa o buffer

    int indice_resposta = resposta - 'a';

    if (indice_resposta >= 0 && indice_resposta < 4) {
        if (indice_resposta == 0) {
            printf("✅ Correto!\n");
            return perguntas[i].pontuacao;
        } else {
            printf("❌ Incorreto. Resposta correta: %s\n", perguntas[i].alternativas[0]);
            return 0;
        }
    } else {
        printf("⚠️ Resposta inválida. Pontuação zero nesta pergunta.\n");
        return 0;
    }
}

// --- FUNÇÃO PRINCIPAL ---
int main(void) {
    setlocale(LC_ALL, "");

    int pontuacao_total = 0;

    printf("===== QUIZ DE SUSTENTABILIDADE SOCIAL =====\n");

    for (int i = 0; i < NUM_PERGUNTAS; i++) {
        pontuacao_total += exibir_pergunta(i);
    }

    printf("\n>>> SUA PONTUAÇÃO FINAL: %d de %d pontos possíveis <<<\n",
           pontuacao_total, NUM_PERGUNTAS * 100);

    return 0;
}



















/*
 * GRUPO: Gustavo Dosso; Lucas Pontes
 *
 * DESCRIÇÃO: Este programa implementa um quiz interativo para avaliar o perfil de um usuário
 * em diferentes áreas: Ética, Sustentabilidade, Inovação e Consciência.
 * Ao final do quiz, o programa calcula a pontuação do usuário em cada perfil
 * e, futuramente, poderá oferecer dicas personalizadas para melhoria nas áreas
 * onde o usuário apresenta maior deficiência.
 *
 */

#include <stdio.h>
#include <locale.h>   // Para configurar o ambiente de localização (suporte a UTF-8)

// --- CONSTANTES ---
#define NUM_PERGUNTAS 3 /* Define o número total de perguntas no quiz. */


// --- ESTRUTURAS DE DADOS ---

/*
 * @brief Estrutura que armazena os pontos de uma pergunta para cada tipo de perfil.
 * Cada membro representa o "peso" da pergunta em relação a um perfil específico.
 * Valores típicos estão entre 0 (nada relevante) e 10 (muito relevante).
 */
struct perfil_usuario {
    int pontos_etico;        // Pontuação para o perfil Ético
    int pontos_sustentavel;  // Pontuação para o perfil Sustentável
    int pontos_inovador;     // Pontuação para o perfil Inovador
    int pontos_conciente;    // Pontuação para o perfil Consciente
};


// --- FUNÇÃO PRINCIPAL ---

int main(void) {
    // Configura o ambiente de localização para permitir a impressão correta de caracteres UTF-8.
    setlocale(LC_ALL, "");

    // --- VARIÁVEIS ---
    int i;        // Variável de controle para loops.
    int i_aux;    // Variável auxiliar para mapear a escolha da alternativa (0='a', 1='b', 2='c').

    // Array de strings contendo as perguntas do quiz.
    char perguntas[NUM_PERGUNTAS][200] = {
        "Você é muito ético?",
        "Você planta arvores?",
        "Você ajuda a preservar o meio-ambiente?"
    };

    // Array de strings contendo as alternativas de resposta para cada pergunta.
    // *** inicialmente todas são iguais, mas será elaborado mais
    char alternativas[NUM_PERGUNTAS][200] = {
        "a) sim | b) não | c) talvez",
        "a) sim | b) não | c) talvez",
        "a) sim | b) não | c) talvez"
    };

    // Define a pontuação base para cada alternativa: 'a' (sim), 'b' (não), 'c' (talvez).
    int pontos_alternativas[3] = {10, -10, 5};

    /*
     * Array de estruturas que define o peso de cada pergunta para cada perfil.
     * O índice do array corresponde à pergunta (0 a NUM_PERGUNTAS-1).
     * Ex: peso_perfis[0] = {3, 6, 5, 1} significa que a primeira pergunta tem:
     * - peso 3 para Ético
     * - peso 6 para Sustentável
     * - peso 5 para Inovador
     * - peso 1 para Consciente
     */
    struct perfil_usuario peso_perfis[NUM_PERGUNTAS] = {
        {3, 6, 5, 1}, // Pesos para a Pergunta 1: "Você é muito ético?"
        {1, 3, 1, 4}, // Pesos para a Pergunta 2: "Você planta árvores?"
        {9, 10, 8, 3} // Pesos para a Pergunta 3: "Você ajuda a preservar o meio-ambiente?"
    };

    /*
     * Array que acumula a pontuação total para cada perfil.
     * Índice 0: Pontos Éticos
     * Índice 1: Pontos Sustentáveis
     * Índice 2: Pontos Inovadores
     * Índice 3: Pontos Conscientes
     */
    int pontos_entrada[4] = {0, 0, 0, 0};

    // Array para armazenar as respostas ('a', 'b', 'c') dadas pelo usuário para cada pergunta.
    char respostas[NUM_PERGUNTAS];


    // --- LÓGICA DO QUIZ ---
    printf("--- QUIZ DE PERFIL DO USUÁRIO ---\n\n");

    // Loop que itera sobre cada pergunta do quiz.
    for (i = 0; i < NUM_PERGUNTAS; ++i) {
        printf("%s \n%s \nSua resposta: ", perguntas[i], alternativas[i]);
        // Lê a resposta do usuário (um caractere).
        // OBS: scanf_s é específico para ambientes Windows e pode ser substituído por scanf.
        // É importante limpar o buffer de entrada após ler um caractere para evitar problemas.
        scanf_s("%c", &respostas[i], 1); // O '1' é o tamanho do buffer para scanf_s com %c

        // Limpa o buffer de entrada após a leitura do caractere
        // (necessário para que `scanf_s` em uma nova iteração não leia o '\n' pendente)
        int c;
        while ((c = getchar()) != '\n' && c != EOF);
        // OU, para sistemas que suportam: fflush(stdin);

        // Mapeia a resposta do usuário para um índice (0, 1 ou 2) para acessar `pontos_alternativas`.
        switch (respostas[i]) {
            case 'a':
                i_aux = 0; // 'a' corresponde ao primeiro valor em pontos_alternativas (10)
                break;
            case 'b':
                i_aux = 1; // 'b' corresponde ao segundo valor em pontos_alternativas (-10)
                break;
            case 'c':
                i_aux = 2; // 'c' corresponde ao terceiro valor em pontos_alternativas (5)
                break;
            default:
                printf("Resposta inválida. Por favor, digite 'a', 'b' ou 'c'.\n");
                // Poderia ser adicionada lógica para pedir a resposta novamente.
                i_aux = 2; // Default para 'talvez' ou outra lógica de tratamento de erro.
                break;
        }

        // Calcula e acumula a pontuação para cada perfil.
        // A pontuação é o produto dos pontos da alternativa escolhida pelo peso da pergunta para cada perfil.
        pontos_entrada[0] += pontos_alternativas[i_aux] * peso_perfis[i].pontos_etico;
        pontos_entrada[1] += pontos_alternativas[i_aux] * peso_perfis[i].pontos_sustentavel;
        pontos_entrada[2] += pontos_alternativas[i_aux] * peso_perfis[i].pontos_inovador;
        pontos_entrada[3] += pontos_alternativas[i_aux] * peso_perfis[i].pontos_conciente;
    }


    // --- EXIBIÇÃO DA PONTUAÇÃO FINAL ---
    printf("\n--- SUA PONTUAÇÃO FINAL ---\n");
    printf("Pontos de Ética: %d\n", pontos_entrada[0]);
    printf("Pontos de Sustentabilidade: %d\n", pontos_entrada[1]);
    printf("Pontos de Inovação: %d\n", pontos_entrada[2]);
    printf("Pontos de Consciência: %d\n", pontos_entrada[3]);


    // Futuramente, esta seção pode incluir a lógica para identificar o perfil dominante
    // e oferecer dicas baseadas na ponstuação.

    return 0; // Indica que o programa foi executado com sucesso.
}